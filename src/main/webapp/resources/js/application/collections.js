// Generated by CoffeeScript 2.0.0-beta8
window.App.Collections.Topics = function (super$) {
  extends$(Topics, super$);
  function Topics() {
    super$.apply(this, arguments);
  }
  Topics.prototype.model = window.App.Models.Topic;
  Topics.prototype.url = '/topics';
  return Topics;
}(Backbone.Collection);
window.App.Collections.Messages = function (super$1) {
  extends$(Messages, super$1);
  function Messages() {
    super$1.apply(this, arguments);
  }
  Messages.getCurrentTopicId = function () {
    return $('#topicId').val();
  };
  Messages.prototype.url = '/topic/messages/' + Messages.getCurrentTopicId();
  Messages.prototype.state = {
    pageSize: 5,
    sortKey: 'updated',
    order: 1
  };
  Messages.prototype.queryParams = {
    totalPages: null,
    totalRecords: null,
    sortKey: 'sort'
  };
  Messages.prototype.parseState = function (resp, queryParams, state, options) {
    console.log(resp.length);
    return { totalRecords: resp.length };
  };
  Messages.prototype.parseRecords = function (resp, options) {
    return resp;
  };
  return Messages;
}(Backbone.PageableCollection);
function isOwn$(o, p) {
  return {}.hasOwnProperty.call(o, p);
}
function extends$(child, parent) {
  for (var key in parent)
    if (isOwn$(parent, key))
      child[key] = parent[key];
  function ctor() {
    this.constructor = child;
  }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor;
  child.__super__ = parent.prototype;
  return child;
}
