// Generated by CoffeeScript 1.7.1

/*
Main view
 */

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App.Views.MainForm = (function(_super) {
    __extends(MainForm, _super);

    function MainForm() {
      return MainForm.__super__.constructor.apply(this, arguments);
    }

    MainForm.prototype.initialize = function() {
      var allTopics;
      allTopics = new window.App.Views.TopicsView({
        collection: window.App.topics
      }).render();
      return $("#topicsTable").append(allTopics.el);
    };

    return MainForm;

  })(Backbone.View);


  /*
  Topics table
   */

  window.App.Views.TopicsView = (function(_super) {
    __extends(TopicsView, _super);

    function TopicsView() {
      return TopicsView.__super__.constructor.apply(this, arguments);
    }

    TopicsView.prototype.initialize = function() {
      return console.log(this.collection.toJSON());
    };

    TopicsView.prototype.tagName = 'tbody';

    TopicsView.prototype.render = function() {
      this.collection.each(this.addOne, this);
      return this;
    };

    TopicsView.prototype.addOne = function(topic) {
      var viewTopic;
      viewTopic = new window.App.Views.Topic({
        model: topic
      });
      return this.$el.append(viewTopic.render().el);
    };

    return TopicsView;

  })(Backbone.View);


  /*
  Topic row
   */

  window.App.Views.Topic = (function(_super) {
    __extends(Topic, _super);

    function Topic() {
      return Topic.__super__.constructor.apply(this, arguments);
    }

    Topic.prototype.tagName = 'tr';

    Topic.prototype.template = window.App.template('topicTemplate');

    Topic.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    return Topic;

  })(Backbone.View);


  /*
  Topic view
   */

  window.App.Views.TopicForm = (function(_super) {
    __extends(TopicForm, _super);

    function TopicForm() {
      return TopicForm.__super__.constructor.apply(this, arguments);
    }

    TopicForm.prototype.initialize = function() {
      var allMessages;
      allMessages = new window.App.Views.MessagesView({
        collection: window.App.messages
      }).render();
      return $("#messagesTable").append(allMessages.el);
    };

    return TopicForm;

  })(Backbone.Model);


  /*
  Message row
   */

  window.App.Views.Message = (function(_super) {
    __extends(Message, _super);

    function Message() {
      return Message.__super__.constructor.apply(this, arguments);
    }

    Message.prototype.tagName = 'tr';

    Message.prototype.template = window.App.template('messageTemplate');

    Message.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    return Message;

  })(Backbone.View);


  /*
  Message table
   */

  window.App.Views.MessagesView = (function(_super) {
    __extends(MessagesView, _super);

    function MessagesView() {
      return MessagesView.__super__.constructor.apply(this, arguments);
    }

    MessagesView.prototype.initialize = function() {
      return console.log(this.collection.toJSON());
    };

    MessagesView.prototype.tagName = 'tbody';

    MessagesView.prototype.render = function() {
      this.collection.each(this.addOne, this);
      return this;
    };

    MessagesView.prototype.addOne = function(message) {
      var viewMessage;
      viewMessage = new window.App.Views.Message({
        model: message
      });
      return this.$el.append(viewMessage.render().el);
    };

    return MessagesView;

  })(Backbone.View);

}).call(this);
